var searchIndex = JSON.parse('{\
"pe_util":{"doc":"pe-util","t":"ENNDLLLLAAALLLLLLLLLLLLLLLLLLLLLALLALLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRMMMMMMMMMMMMMMDDDDDTDDDDTMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["FunctionId","Name","Ordinal","PE","borrow","borrow","borrow_mut","borrow_mut","consts","definitions","dos_header","dos_headers","dos_headers_mut","from","from","from_address","from_ptr","from_ptr_assume_mapped","from_ptr_unchecked","from_slice","from_slice_assume_mapped","from_slice_unchecked","get_export_address","get_export_name","get_export_rva","get_exports","get_function_ordinal","get_pe_resource","into","into","is_64bit","is_mapped","nt_headers","nt_headers","nt_headers_mut","optional_header","rva_to_foa","section_headers","section_headers_mut","try_from","try_from","try_into","try_into","type_id","type_id","validate","DLL_PROCESS_ATTACH","DLL_PROCESS_DETACH","DLL_THREAD_ATTACH","DLL_THREAD_DETACH","IMAGE_DIRECTORY_ENTRY_ARCHITECTURE","IMAGE_DIRECTORY_ENTRY_BASERELOC","IMAGE_DIRECTORY_ENTRY_BOUND_IMPORT","IMAGE_DIRECTORY_ENTRY_COM_DESCRIPTOR","IMAGE_DIRECTORY_ENTRY_DEBUG","IMAGE_DIRECTORY_ENTRY_DELAY_IMPORT","IMAGE_DIRECTORY_ENTRY_EXCEPTION","IMAGE_DIRECTORY_ENTRY_EXPORT","IMAGE_DIRECTORY_ENTRY_GLOBALPTR","IMAGE_DIRECTORY_ENTRY_IAT","IMAGE_DIRECTORY_ENTRY_IMPORT","IMAGE_DIRECTORY_ENTRY_LOAD_CONFIG","IMAGE_DIRECTORY_ENTRY_RESOURCE","IMAGE_DIRECTORY_ENTRY_SECURITY","IMAGE_DIRECTORY_ENTRY_TLS","IMAGE_DOS_SIGNATURE","IMAGE_FILE_MACHINE_AMD64","IMAGE_FILE_MACHINE_FLAG","IMAGE_FILE_MACHINE_I386","IMAGE_NT_SIGNATURE","IMAGE_NUMBEROF_DIRECTORY_ENTRIES","IMAGE_ORDINAL_FLAG","IMAGE_REL_BASED_ABSOLUTE","IMAGE_REL_BASED_DIR64","IMAGE_REL_BASED_HIGH","IMAGE_REL_BASED_HIGHADJ","IMAGE_REL_BASED_HIGHLOW","IMAGE_REL_BASED_LOW","IMAGE_REL_BASED_MACHINE_SPECIFIC_5","IMAGE_REL_BASED_MACHINE_SPECIFIC_7","IMAGE_REL_BASED_MACHINE_SPECIFIC_8","IMAGE_REL_BASED_MACHINE_SPECIFIC_9","IMAGE_REL_BASED_RESERVED","MAX_PATH","MAX_SECTION_HEADER_LEN","STATUS_DELETE_PENDING","STATUS_END_OF_FILE","STATUS_INVALID_PARAMETER","STATUS_NOT_IMPLEMENTED","STATUS_PENDING","STATUS_SUCCESS","AddressOfFunctions","AddressOfNameOrdinals","AddressOfNames","Base","Characteristics","Characteristics","Characteristics","Characteristics","Characteristics","CodePage","DataRVA","DataSize","FirstThunk","ForwarderChain","IMAGE_DATA_DIRECTORY","IMAGE_DOS_HEADER","IMAGE_EXPORT_DIRECTORY","IMAGE_FILE_HEADER","IMAGE_IMPORT_DESCRIPTOR","IMAGE_IMPORT_DESCRIPTOR_UNION","IMAGE_RESOURCE_DATA_ENTRY","IMAGE_RESOURCE_DIRECTORY","IMAGE_RESOURCE_DIRECTORY_ENTRY","IMAGE_SECTION_HEADER","IMAGE_SECTION_HEADER_UNION","Id","Machine","MajorVersion","MajorVersion","MinorVersion","MinorVersion","Misc","Misc","Name","Name","Name","NumberOfFunctions","NumberOfIDEntries","NumberOfLinenumbers","NumberOfNameEntries","NumberOfNames","NumberOfRelocations","NumberOfSections","NumberOfSymbols","OffsetToData","OriginalFirstThunk","PhysicalAddress","PointerToLinenumbers","PointerToRawData","PointerToRelocations","PointerToSymbolTable","Reserved","Size","SizeOfOptionalHeader","SizeOfRawData","TimeDateStamp","TimeDateStamp","TimeDateStamp","TimeDateStamp","VirtualAddress","VirtualAddress","VirtualSize","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","e_cblp","e_cp","e_cparhdr","e_crlc","e_cs","e_csum","e_ip","e_lfanew","e_lfarlc","e_magic","e_maxalloc","e_minalloc","e_oemid","e_oeminfo","e_ovno","e_res","e_res2","e_sp","e_ss","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","into","into","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","DosHeader","borrow","borrow_mut","e_cblp","e_cp","e_cparhdr","e_crlc","e_cs","e_csum","e_ip","e_lfanew","e_lfarlc","e_magic","e_minalloc","e_oemid","e_oeminfo","e_ovno","e_res","e_res2","e_sp","e_ss","from","into","set_e_cblp","set_e_cp","set_e_cparhdr","set_e_crlc","set_e_cs","set_e_csum","set_e_ip","set_e_lfanew","set_e_lfarlc","set_e_magic","set_e_minalloc","set_e_oemid","set_e_oeminfo","set_e_ovno","set_e_res","set_e_res2","set_e_sp","set_e_ss","try_from","try_into","type_id","NtHeaders","borrow","borrow_mut","file_header","file_header_mut","from","into","optional_header","optional_header_mut","set_signature","signature","size_of","try_from","try_into","type_id","OptionalHeader","address_of_entry_point","base_of_code","borrow","borrow_mut","check_sum","data_directory","data_directory_mut","dll_characteristics","file_alignment","from","image_base","into","loader_flags","magic","major_image_version","major_linker_version","major_operating_system_version","major_subsystem_version","minor_image_version","minor_linker_version","minor_operating_system_version","minor_subsystem_version","number_of_rva_and_sizes","section_alignment","set_address_of_entry_point","set_base_of_code","set_check_sum","set_dll_characteristics","set_file_alignment","set_image_base","set_loader_flags","set_magic","set_major_image_version","set_major_linker_version","set_major_operating_system_version","set_major_subsystem_version","set_minor_image_version","set_minor_linker_version","set_minor_operating_system_version","set_minor_subsystem_version","set_number_of_rva_and_sizes","set_section_alignment","set_size_of_code","set_size_of_headers","set_size_of_heap_commit","set_size_of_heap_reserve","set_size_of_image","set_size_of_initialized_data","set_size_of_stack_commit","set_size_of_stack_reserve","set_size_of_uninitialized_data","set_subsystem","set_win32_version_value","size_of","size_of_code","size_of_headers","size_of_heap_commit","size_of_heap_reserve","size_of_image","size_of_initialized_data","size_of_stack_commit","size_of_stack_reserve","size_of_uninitialized_data","subsystem","try_from","try_into","type_id","win32_version_value"],"q":[[0,"pe_util"],[46,"pe_util::consts"],[91,"pe_util::definitions"],[249,"pe_util::dos_header"],[293,"pe_util::nt_headers"],[308,"pe_util::optional_header"],[377,"std::io::error"],[378,"core::option"],[379,"alloc::string"],[380,"alloc::vec"],[381,"core::result"],[382,"core::any"]],"d":["An enum that represents the various types of ways a …","","","A pointer sized type that allows the user to read a buffer …","","","","","","","","Returns the <code>DosHeader</code> structure, which allows you to …","Returns the <code>DosHeader</code> structure, which allows you to …","Returns the argument unchanged.","Returns the argument unchanged.","Returns a PE from a <code>usize</code> with the value of the address of …","Returns a <code>PE</code> from a <code>*const u8</code> that points to the start of …","Returns a <code>PE</code> from a <code>*const u8</code> that points to the start of …","Returns a <code>PE</code> from a <code>*const u8</code> that points to the start of …","Returns a <code>PE</code> from a slice that starts with a valid PE …","Returns a <code>PE</code> from a slice that shares the lifetime of the …","Returns a <code>PE</code> from a slice that starts with a valid PE …","Takes in a FunctionId and looks up the function address in …","Returns the name of the function with the given ordinal …","Takes in a FunctionId and looks up the function rva in the …","Returns a <code>Vec&lt;&amp;str&gt;</code> that contains the names all the …","Returns the ordinal of the function with the given name …","Looks up the Resource entry with the provided category and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the architecture for the PE is 64-bit, or …","Returns true if the PE is mapped into memory, or false is …","","Returns the <code>NtHeaders</code> structure, which allows you to …","Returns the <code>NtHeaders</code> structure, which allows you to …","","Takes the <code>Relative Virtual Address</code> and returns the …","Returns the section headers for the PE file as a slice.","Returns the section headers for the PE file as a mutable …","","","","","","","Checks that the memory pointed to by <code>self.pointer</code> is a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Type that represents the <code>IMAGE_DOS_HEADER</code> portion of the …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Type that represents the <code>IMAGE_NT_HEADERS</code> portion of the …","","","","Safety","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Returns the <code>OptionalHeader</code> structure, which allows you to …","Returns the <code>OptionalHeader</code> structure, which allows you to …","","","","","","","Type that represents the <code>IMAGE_OPTIONAL_HEADER</code> portion of …","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,8,8,0,1,8,1,8,0,0,0,1,1,1,8,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1,1,0,1,1,0,1,1,1,1,8,1,8,1,8,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,25,25,25,26,25,27,16,28,29,29,29,30,30,0,0,0,0,0,0,0,0,0,0,0,31,27,25,28,25,28,30,16,30,25,16,25,28,16,28,25,16,27,27,31,26,32,16,16,16,27,29,23,27,16,30,25,27,28,23,16,32,33,30,26,25,27,23,31,16,32,28,29,33,30,26,25,27,23,31,16,32,28,29,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,30,26,25,27,23,31,16,32,28,29,33,30,26,25,27,23,31,16,32,28,29,33,30,26,25,27,23,31,16,32,28,29,33,30,26,25,27,23,31,16,32,28,29,33,30,26,25,27,23,31,16,32,28,29,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,15,15,15,15,15,15,15,15,15,15,15,15,15,15,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22],"f":[0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[1,2],[1,2],[-1,-1,[]],[-1,-1,[]],[3,[[4,[1]]]],[5,[[4,[1]]]],[[5,6],1],[5,1],[[[7,[5]]],[[4,[1]]]],[[[7,[5]],6],1],[[[7,[5]]],1],[[1,8],[[9,[3]]]],[[1,10],[[9,[11]]]],[[1,8],[[9,[12]]]],[1,[[9,[[14,[13]]]]]],[[1,[7,[5]]],10],[[1,12,12],[[9,[[7,[5]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[1,6],[1,6],0,[1,15],[1,15],0,[[1,12],[[9,[12]]]],[1,[[7,[16]]]],[1,[[7,[16]]]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[1,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[2,10],[2,10],[2,10],[2,10],[2,10],[2,10],[2,10],[2,19],[2,10],[2,10],[2,10],[2,10],[2,10],[2,10],[2,[[20,[10]]]],[2,[[20,[10]]]],[2,10],[2,10],[-1,-1,[]],[-1,-2,[],[]],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,19],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,10],21],[[2,[20,[10]]],21],[[2,[20,[10]]],21],[[2,10],21],[[2,10],21],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-1,[]],[-1,-2,[],[]],[15,22],[15,22],[[15,12],21],[15,12],[15,3],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],0,[22,12],[22,12],[-1,-2,[],[]],[-1,-2,[],[]],[22,12],[22,[[7,[23]]]],[22,[[7,[23]]]],[22,10],[22,12],[-1,-1,[]],[22,24],[-1,-2,[],[]],[22,12],[22,10],[22,10],[22,5],[22,10],[22,10],[22,10],[22,5],[22,10],[22,10],[22,12],[22,12],[[22,12],21],[[22,12],21],[[22,12],21],[[22,10],21],[[22,12],21],[[22,24],21],[[22,12],21],[[22,10],21],[[22,10],21],[[22,5],21],[[22,10],21],[[22,10],21],[[22,10],21],[[22,5],21],[[22,10],21],[[22,10],21],[[22,12],21],[[22,12],21],[[22,12],21],[[22,12],21],[[22,24],21],[[22,24],21],[[22,12],21],[[22,12],21],[[22,24],21],[[22,24],21],[[22,12],21],[[22,10],21],[[22,12],21],[22,3],[22,12],[22,12],[22,24],[22,24],[22,12],[22,12],[22,24],[22,24],[22,12],[22,10],[-1,[[17,[-2]]],[],[]],[-1,[[17,[-2]]],[],[]],[-1,18,[]],[22,12]],"c":[],"p":[[3,"PE",0],[3,"DosHeader",249],[15,"usize"],[6,"Result",377],[15,"u8"],[15,"bool"],[15,"slice"],[4,"FunctionId",0],[4,"Option",378],[15,"u16"],[3,"String",379],[15,"u32"],[15,"str"],[3,"Vec",380],[3,"NtHeaders",293],[3,"IMAGE_SECTION_HEADER",91],[4,"Result",381],[3,"TypeId",382],[15,"i32"],[15,"array"],[15,"tuple"],[3,"OptionalHeader",308],[3,"IMAGE_DATA_DIRECTORY",91],[15,"u64"],[3,"IMAGE_EXPORT_DIRECTORY",91],[19,"IMAGE_IMPORT_DESCRIPTOR_UNION",91],[3,"IMAGE_FILE_HEADER",91],[3,"IMAGE_RESOURCE_DIRECTORY",91],[3,"IMAGE_RESOURCE_DATA_ENTRY",91],[3,"IMAGE_IMPORT_DESCRIPTOR",91],[3,"IMAGE_RESOURCE_DIRECTORY_ENTRY",91],[19,"IMAGE_SECTION_HEADER_UNION",91],[3,"IMAGE_DOS_HEADER",91]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
